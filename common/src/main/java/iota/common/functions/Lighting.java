package iota.common.functions;

import iota.client.model.EspDevice;
import iota.common.Constants;
import iota.common.definitions.IStateItem;

import java.util.ArrayList;
import java.util.List;

public class Lighting implements IFunction {
    private List<ByteState> stateItems;

    protected Lighting(EspDevice device) {
        stateItems = new ArrayList<>();
        //these values are from the c enum "LedDefines.h"
        //in the future having these generated by either gradle or some other
        //class would be nice
        stateItems.add(new ByteState("Pid"));
        stateItems.add(new ByteState("fps"));
        stateItems.add(new ByteState("anim hz"));
        stateItems.add(new ByteState("brightness"));
        stateItems.add(new ByteState("hue"));
        stateItems.add(new ByteState("sat"));
        stateItems.add(new ByteState("val"));
        stateItems.add(new ByteState("delta hue"));
        stateItems.add(new ByteState("delta sat"));
        stateItems.add(new ByteState("delta val"));
        stateItems.add(new ByteState("density"));
    }

    @Override
    public String getDisplayName() {
        return "Lighting";
    }

    @Override
    public short getFuncId() {
        return Constants.FID_LEDS;
    }


    @Override
    public int handleReceivedData(List<Byte> receivedData) {
        stateItems.clear();
        int num = 0;
        for (Byte b : receivedData) {
            ByteState bs = new ByteState("State " + num);
            bs.setVal(b);
            stateItems.add(bs);
            num++;
        }

        return 0;
    }

    @Override
    public List<IStateItem> getStateItems() {
        return new ArrayList<>(stateItems);
    }

    private class ByteState implements IStateItem {
        private String name;
        private byte val;

        public ByteState(String name) {
            this.name = name;
        }

        @Override
        public String getName() {
            return name;
        }

        @Override
        public String getVal() {
            return String.format("%02X", val);
        }

        private void setVal(byte b) {
            val = b;
        }
    }

}
